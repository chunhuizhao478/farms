# Verification of Benchmark Problem TPV205-2D from the SCEC Dynamic Rupture Validation exercises #
# Reference: #
# Harris, R. M.-P.-A. (2009). The SCEC/USGS Dynamic Earthquake Rupture Code Verification Exercise. Seismological Research Letters, vol. 80, no. 1, pages 119-126. #
# [Note]: This serves as a test file, to run the full problem, please extend the domain size by modifying nx, ny, xmin, xmax, ymin, ymax

[Mesh]
    [./msh]
      type = FileMeshGenerator
      file = '../../../meshgenerator/tpv142d/adaptive_mesh_v3/tpv142d_100m_adaptive.msh'
    []
    [./subdomain_id] # copy from the outputs of meshio_run_tria.py
        input = msh
        type = SubdomainPerElementGenerator 
        element_ids = '
        17 67 76 88 98 121 190 219 246 297 341 366 383 384 393 443 476 526 530 539 571 634 653 664 708 775 812 839 851 869 876 895 917 954 963 985 1004 1019 1039 1079 1146 1153 1163 1166 1237 1238 1258 1300 1317 1318 1328 1402 1404 1423 1517 1552 1554 1582 1609 1640 1648 1719 1723 1731 1761 1822 1849 1855 1864 1911 1980 2027 2031 2050 2111 2127 2237 2305 2416 2447 2475 2527 2635 2679 2706 2740 2745 2754 2785 2909 2912 2934 2950 2984 3026 3037 3055 3056 3081 3111 3113 3127 3134 3163 3167 3178 3199 3205 3244 3313 3318 3345 3350 3377 3407 3502 3516 3558 3649 3702 3705 3763 3776 3782 3816 3893 3907 3941 3962 3996 4076 4078 4089 4108 4111 4141 4142 4197 4269 4343 4572 4637 4644 4647 4683 4732 4760 4799 4828 4916 4959 4962 4994 5003 5049 5154 5160 5231 5262 5357 5389 5522 5693 5724 5743 5757 5837 5952 6099 6100 6106 6109 6113 6142 6624 6632 6642 6646 6873 7037 7102 7161 7483 7495 7692 7767 8114 8425 8537 9273 9605 9918 9995 10278 10457 10682 10706 10892 11499 11954 12227 12352 12914 13097 13456 13712 14369 14740 14858 15309 15863 15924 16050 16125 16401 16448 16461 16472 16517 16865 17355 17422 17738 18252 19314 19808 21101 21213 21214 21896 22007 22105 22389 22703 23195 23214 23838 24066 24156 24966 25502 25536 25538 25542 25553 25564 25567 25583 25659 25662 25663 25885 25889 25950 26035 26152 26188 26257 26259 26402 26417 26436 26465 26544 26574 26853 27103 27133 27158 27250 27252 27396 27420 27479 27859 28031 28101 28153 28642 29098 29187 29421 29566 29675 29724 29776 29869 29871 29909 30084 30089 30097 30248 30389 30574 30612 30643 30673 30882 30961 30990 31067 31470 31598 31817 31921 32005 32013 32052 32190 32339 32360 32366 32376 32443 32449 32478 32489 32508 32579 32597 32628 32655 32784 32968 32975 32980 32981 32998 33140 33272 33354 33363 33451 33458 33512 33546 33613 33614 33628 33876 33900 34068 34073 34079 34088 34218 34258 34316 34459 34543 34544 34548 34629 34703 34732 34887 34899 35002 35018 35071 35112 35187 35194 35255 35257 35286 35307 35336 35356 35379 35385 35430 35449 35453 35511 35568 35571 35595 35609 35676 35713 35722 35735 35737 35753 35757 35758 35814 35926 35945 36072 36084 36086 36105 36187 36202 36208 36308 36361 36366 36391 36399 36523 36624 36733 36757 36778 36823 36829 36856 36863 36884 36955 36971 37020 37033 37039 37043 37059 37066 37086 37160 37179 37214 37215 37345 37362 37394 37411 37416 37423 37469 37525 37534 37543 37557 37559 37597 37606 37613 37693 37708 37728 37754 37795 37808 37819 37844 37893 38002 38025 38038 38055 38076 38090 38094 38104 38124 38135 38139 38161 38162 38168 38179 38190 38193 38207 38223 38226 38237 38252 38270 38276 38279 38291 38307 38323 38352 38429 38463 38484 38560 38598 38599 38627 38649 38653 38656 38661 38672 38687 38717 38738 38743 38769 38783 38790 38834 38870 38904 38913 38943 38944 38998 39006 39050 39060 39073 39076 39139 39145 39147 39186 39237 39260 39280 39281 39285 39291 39301 39320 39326 39343 39345 39349 39351 39378 39395 39408 39438 39458 39508 39563 39653 39674 39684 39688 39740 39743 39831 39859 39869 39885 39924 40007 40019 40032 40039 40053 40073 40082 40083 40091 40097 40107 40128 40132 40162 40204 40213 40323 40365 40388 40412 40472 40759 40807 40841 40951 41131 41328 41338 41366 41386 3 11 13 15 43 60 61 68 87 89 126 128 142 149 156 192 199 206 220 232 248 275 286 308 322 339 347 378 391 401 408 413 436 442 447 461 475 483 488 490 492 498 501 505 511 525 527 553 589 612 631 632 643 644 665 684 726 748 759 765 793 794 888 931 1031 1041 1048 1061 1063 1073 1078 1086 1114 1124 1170 1178 1184 1189 1192 1202 1210 1212 1239 1246 1304 1306 1332 1333 1359 1363 1364 1379 1392 1403 1442 1543 1544 1547 1549 1565 1568 1573 1597 1607 1708 1715 1716 1754 1757 1820 1824 1904 1908 1930 1932 1934 1961 1995 2010 2024 2035 2052 2074 2082 2084 2088 2184 2199 2201 2279 2285 2296 2371 2404 2425 2428 2432 2485 2486 2537 2644 2703 2712 2722 2776 2820 2837 2891 2893 2971 3014 3090 3093 3097 3107 3108 3132 3133 3200 3252 3261 3283 3396 3408 3417 3454 3521 3523 3532 3534 3638 3673 3691 3710 3759 3813 3827 3830 3956 4084 4177 4327 4339 4381 4413 4490 4564 4603 4609 4613 4660 4671 4695 4770 4794 4817 4818 4824 4873 4885 4976 4981 4989 5048 5089 5110 5135 5161 5228 5269 5270 5374 5382 5445 5467 5469 5499 5566 5567 5586 5646 5698 5700 5719 5720 5819 5831 5840 5938 5957 5964 6064 6090 6160 6173 6192 6202 6228 6237 6269 6293 6332 6349 6359 6398 6400 6497 6515 6581 6651 6704 6974 7053 7133 7169 7198 7299 7334 7385 7409 7476 7494 7708 7983 8010 8307 8448 8516 8573 8949 9000 9659 9830 10525 10593 10807 10968 11388 11611 12282 12461 12762 12828 12862 13048 13081 13508 14523 14562 14959 15050 15087 15405 15694 16145 16770 17465 17827 19096 19255 19260 19273 19276 19292 19294 19303 19308 20263 20401 20519 20774 20980 21055 21183 21359 21438 21494 21950 21986 22128 22365 22596 22650 22735 22818 22992 23571 23640 23913 24360 24370 24462 24569 24645 24708 24735 24747 24825 24834 24836 24959 25191 25203 25237 25413 25452 25494 25710 25723 25866 25923 26945 27145 27448 27472 27561 27745 28203 28583 28881 28909 28986 29457 29479 29551 29610 30167 30393 30465 30480 30965 31372 31464 31489 31649 31758 31779 32255 32291 32307 32324 32327 32447 32494 32646 32695 32766 32795 32835 32856 32871 32938 33015 33028 33055 33149 33156 33336 33400 33545 33566 33567 33619 33722 33753 33789 33839 33887 34020 34150 34252 34319 34435 34485 34495 34690 34720 34821 34857 34876 34920 34923 34947 34956 35024 35030 35049 35171 35175 35201 35210 35224 35273 35293 35298 35332 35419 35543 35593 35626 35673 35699 35774 35895 35947 36057 36099 36157 36178 36184 36277 36292 36485 36577 36594 36659 36692 36696 36724 36751 36839 37022 37065 37073 37121 37158 37184 37201 37275 37307 37336 37356 37364 37476 37490 37492 37574 37609 37637 37662 37721 37731 37732 37815 37872 37989 38045 38049 38110 38141 38281 38385 38432 38487 38496 38507 38512 38591 38624 38640 38666 38678 38712 38772 38840 38892 38928 38954 38992 39012 39046 39099 39118 39128 39133 39141 39167 39201 39258 39274 39292 39308 39391 39421 39426 39453 39457 39461 39469 39479 39492 39500 39589 39593 39604 39624 39651 39679 39687 39701 39706 39708 39735 39736 39748 39772 39790 39839 39857 39858 39861 39901 39942 39943 39951 39987 39988 40020 40029 40095 40137 40214 40241 40293 40318 40505 40551 40635 40737 40819 40893 40899 40977 41000 41112 41364 41464
        28 56 112 116 230 264 271 311 329 380 402 482 510 542 592 598 717 749 806 831 865 921 1076 1111 1284 1374 1386 1518 1524 1542 1598 1599 1870 2032 2096 2175 2242 2625 2634 2753 2879 3139 3177 3256 3260 3477 3518 3522 3619 3656 3692 3850 4257 4334 4468 4577 4599 4638 4676 4701 4823 5083 5183 5334 5343 5443 5520 5603 5615 5984 6052 6162 6371 6420 6440 6597 7042 7132 7136 7176 7182 7213 7267 7947 7988 8017 8634 9246 9816 10780 10845 10927 11997 12171 12206 12234 12397 13160 13202 13473 13548 14306 14462 14495 14506 14560 14674 15873 16092 16353 16754 16777 17379 20201 20402 20706 20722 20934 21035 21080 21271 21512 21514 21966 22040 22218 22307 22943 23081 23508 23602 23609 23943 25007 25112 25528 25720 26269 26474 26508 26614 26690 26955 26974 27814 28186 28333 28342 28801 29663 29685 30149 30261 30923 31136 31172 31290 31558 31616 31932 31950 31973 32326 32598 32800 32886 32923 32985 33167 33238 33314 33427 33778 33790 33822 33909 33952 34117 34152 34325 34368 34633 34651 34775 35151 35197 35313 35508 35523 35602 35617 35648 35667 35682 35705 35886 35955 36017 36075 36100 36110 36454 36509 36556 36631 36657 36699 36718 36849 36932 36983 37113 37168 37467 37539 37607 37661 37780 37943 37981 38594 38628 38662 38786 38863 38907 38962 39156 39335 39356 39455 39480 39502 39525 39605 39633 39666 39672 39690 39767 39793 39795 39825 39838 39944 40285 40626 40704 40813 41286 30 66 135 150 170 299 360 450 453 535 711 818 894 905 1221 1290 1297 1321 1353 1447 1464 1503 1631 1667 1724 1778 2058 2072 2080 2106 2137 2292 2297 2343 2469 2587 2629 2639 2680 2695 2813 2815 2876 2995 3013 3018 3384 3453 3478 3493 3510 3554 3753 3804 3852 3921 3960 4028 4100 4313 4522 4602 4875 4944 5018 5112 5300 5578 6128 6277 6560 6585 6897 7796 7945 9466 9474 9870 10182 11354 11651 11949 12138 13976 14385 14670 14731 14795 15369 16094 16782 18062 20202 20203 20204 20222 20677 21461 22133 22506 22783 23022 23282 23322 23408 24797 24978 25142 25178 25208 25324 25638 25649 25809 25845 25875 25934 26071 26091 26746 26942 27121 27188 27240 27308 27376 27694 28349 28980 29077 29083 29303 29359 29447 29545 29720 29854 29979 30044 30061 30139 30192 30322 30326 30394 30398 30675 30703 31662 31707 32085 32138 32285 32296 32778 32818 32845 33038 33042 33109 33128 33141 33243 33398 33418 34031 34064 34156 34334 34397 34493 34789 34852 34939 34973 35122 35208 35234 35359 35441 35504 35534 35569 35611 35715 35824 35917 36050 36113 36136 36371 36812 36897 36911 37199 37223 37286 37380 37517 37526 37600 37625 37785 37944 38033 38071 38148 38395 38565 38596 38602 38613 38617 38645 38816 38927 39020 39090 39098 39241 39363 39425 39504 39603 39676 39722 39730 39770 39776 39777 39812 39883 39935 39959 40064 40153 40249 40269 40415 40649 40707 40804 41009 41010 41024 41025 41106 41251 41316 
        '
        subdomain_ids = '


        '
    []
    [./split]
      type = BreakMeshByBlockGenerator
      input = subdomain_id
      split_interface = true
      block_pairs = '100 200; 300 400'
    []
    [./sidesets]
      input = split
      type = SideSetsFromNormalsGenerator
      normals = '-1 0 0
                  1 0 0
                  0 -1 0
                  0 1 0'
      new_boundary = 'left right bottom top'
    []  
  []

  [GlobalParams]
    #primary variables
    displacements = 'disp_x disp_y'
    #damping ratio
    q = 0.1
    #characteristic length (m)
    Dc = 0.4
    #initial normal stress (Pa)
    T2_o = 120e6
    #dynamic friction coefficient
    mu_d = 0.525
    #element edge length (m)
    len = 100
  []

  [AuxVariables]
    [./resid_x]
      order = FIRST
      family = LAGRANGE
    [../]
    [./resid_y]
        order = FIRST
        family = LAGRANGE
    []
    [./resid_slipweakening_x]
        order = FIRST
        family = LAGRANGE
    [../]
    [./resid_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    [../]
    [./disp_slipweakening_x]
        order = FIRST
        family = LAGRANGE
    []
    [./disp_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    []
    [./vel_slipweakening_x]
      order = FIRST
      family = LAGRANGE
    []
    [./vel_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    []
    [./mu_s]
        order = CONSTANT
        family = MONOMIAL
    []
    [./ini_shear_stress]
        order = CONSTANT
        family = MONOMIAL
    []
    [./shear_jump_rate_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./shear_jump_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./normal_jump_aux]
      order = CONSTANT
      family = MONOMIAL
  []
    [./shear_traction_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./normal_traction_aux]
      order = CONSTANT
      family = MONOMIAL
    []
  []

  [Physics/SolidMechanics/CohesiveZone]
    [./czm_ik]
      boundary = 'Block100_Block200 Block300_Block400'
      strain = SMALL
      generate_output='traction_x traction_y jump_x jump_y'
    [../]
  []

  [Physics]
    [SolidMechanics]
      [QuasiStatic]
        [all]
          strain = SMALL
          add_variables = true
          planar_formulation = PLANE_STRAIN
          generate_output = 'stress_xx stress_yy stress_xy'
          extra_vector_tags = 'restore_tag'
        []
      []
    []
  []

  [Problem]
    extra_tag_vectors = 'restore_tag'
  []

  [Functions]
    [func_static_friction_coeff_mus]
      type = ConstantFunction
      value = 0.677
    []
    #the center is (-8000,0)
    #expand 1.5e3 on both side (-9500,0) and (-6500,0)
    [func_initial_strike_shear_stress]
      type = PiecewiseConstant
      axis=x
      x = '-1000e3 -9.5e3  -6.5e3'
      y = ' 70.0e6 81.6e6 70.0e6'
    []
  []

  [AuxKernels]
    [Displacment_x]
      type = ProjectionAux
      variable = disp_slipweakening_x
      v = disp_x
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Displacement_y]
      type = ProjectionAux
      variable = disp_slipweakening_y
      v = disp_y
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Vel_x]
      type = CompVarRate
      variable = vel_slipweakening_x
      coupled = disp_x
      execute_on = 'TIMESTEP_END'
    []
    [Vel_y]
      type = CompVarRate
      variable = vel_slipweakening_y
      coupled = disp_y
      execute_on = 'TIMESTEP_END'
    []
    [jump_x_rate]
      type = FDCompVarRate
      variable = shear_jump_rate_aux
      coupled = jump_x
      execute_on = 'TIMESTEP_END'
    []
    [Residual_x]
      type = ProjectionAux
      variable = resid_slipweakening_x
      v = resid_x
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Residual_y]
      type = ProjectionAux
      variable = resid_slipweakening_y
      v = resid_y
      execute_on = 'TIMESTEP_BEGIN'
    []
    [restore_x]
      type = TagVectorAux
      vector_tag = 'restore_tag'
      v = 'disp_x'
      variable = 'resid_x'
      execute_on = 'TIMESTEP_END'
    []
    [restore_y]
      type = TagVectorAux
      vector_tag = 'restore_tag'
      v = 'disp_y'
      variable = 'resid_y'
      execute_on = 'TIMESTEP_END'
    []
    [StaticFricCoeff]
      type = FunctionAux
      variable = mu_s
      function = func_static_friction_coeff_mus
      execute_on = 'LINEAR TIMESTEP_BEGIN'
    []
    [StrikeShearStress]
      type = FunctionAux
      variable = ini_shear_stress
      function = func_initial_strike_shear_stress
      execute_on = 'LINEAR TIMESTEP_BEGIN'
    []
    ##
    [GetJumpX]
      type = MaterialRealAux
      property = jump_x
      variable = shear_jump_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
    [GetJumpY]
      type = MaterialRealAux
      property = jump_y
      variable = normal_jump_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
    [GetTractionX]
      type = MaterialRealAux
      property = traction_x
      variable = shear_traction_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
  []

  [Kernels]
    [./inertia_x]
      type = InertialForce
      use_displaced_mesh = false
      variable = disp_x
    []
    [./inertia_y]
      type = InertialForce
      use_displaced_mesh = false
      variable = disp_y
    []
    [./Reactionx]
      type = StiffPropDamping
      variable = 'disp_x'
      component = '0'
    []
    [./Reactiony]
      type = StiffPropDamping
      variable = 'disp_y'
      component = '1'
    []
  []

  [Materials]
    [elasticity]
        type = ComputeIsotropicElasticityTensor
        lambda = 32.04e9
        shear_modulus = 32.04e9
        use_displaced_mesh = false
    []
    [stress]
        type = ComputeLinearElasticStress
    []
    [density]
        type = GenericConstantMaterial
        prop_names = density
        prop_values = 2670
    []
    [./czm_mat]
        type = SlipWeakeningFrictionczm2d
        disp_slipweakening_x     = disp_slipweakening_x
        disp_slipweakening_y     = disp_slipweakening_y
        reaction_slipweakening_x = resid_slipweakening_x
        reaction_slipweakening_y = resid_slipweakening_y
        mu_s = mu_s
        ini_shear_sts = ini_shear_stress
        boundary = 'Block100_Block200 Block300_Block400'
    [../]
    ##
    [./shear_jump_mat]
      type = ParsedMaterial
      property_name = shear_jump_mat
      coupled_variables = 'shear_jump_aux'
      expression = 'shear_jump_aux'
      outputs = exodus
    []
    [./normal_jump_mat]
      type = ParsedMaterial
      property_name = normal_jump_mat
      coupled_variables = 'normal_jump_aux'
      expression = 'normal_jump_aux'
      outputs = exodus
    []
    [./shear_traction_mat]
      type = ParsedMaterial
      property_name = shear_traction_mat
      coupled_variables = 'shear_traction_aux'
      expression = 'shear_traction_aux'
      outputs = exodus
    []
    [./shear_jump_rate_mat]
      type = ParsedMaterial
      property_name = shear_jump_rate_mat
      coupled_variables = 'shear_jump_rate_aux'
      expression = 'shear_jump_rate_aux'
      outputs = exodus
    []
  []

  [UserObjects]
    [recompute_residual_tag]
        type = ResidualEvaluationUserObject
        vector_tag = 'restore_tag'
        force_preaux = true
        execute_on = 'TIMESTEP_END'
    []
  []

  [Executioner]
    type = Transient
    dt = 0.0025
    end_time = 12
    # num_steps = 10
    [TimeIntegrator]
      type = CentralDifference
      solve_type = lumped
    []
  []

  [Outputs]
    exodus = true
    time_step_interval = 10
    # [csv]
    #   type = CSV
    #   execute_on = 'initial timestep_end'
    #   time_step_interval = 1
    # []
  []

  [BCs]
    [./dashpot_top_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = top
    []
    [./dashpot_top_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = top
    []
    [./dashpot_bottom_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = bottom
    []
    [./dashpot_bottom_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = bottom
    []
    [./dashpot_left_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = left
    []
    [./dashpot_left_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = left
    []
    [./dashpot_right_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = right
    []
    [./dashpot_right_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = right
    []
  []

