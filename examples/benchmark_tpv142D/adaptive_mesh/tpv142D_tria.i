# Verification of Benchmark Problem TPV205-2D from the SCEC Dynamic Rupture Validation exercises #
# Reference: #
# Harris, R. M.-P.-A. (2009). The SCEC/USGS Dynamic Earthquake Rupture Code Verification Exercise. Seismological Research Letters, vol. 80, no. 1, pages 119-126. #
# [Note]: This serves as a test file, to run the full problem, please extend the domain size by modifying nx, ny, xmin, xmax, ymin, ymax

[Mesh]
    [./msh]
      type = FileMeshGenerator
      file = '../../../meshgenerator/tpv142d/adaptive_mesh/tpv142d_100m_adaptive.msh'
    []
    [./subdomain_id] # copy from the outputs of meshio_run_tria.py
      input = msh
      type = SubdomainPerElementGenerator 
      element_ids = '
      25 54 61 92 115 296 379 455 489 513 538 567 657 682 722 741 784 831 841 861 950 1026 1057 1061 1100 1104 1152 1153 1242 1270 1304 1335 1524 1531 1569 1584 1634 1638 1661 1731 1820 1885 2126 2183 2366 2536 2737 2795 2838 2890 2935 2942 3002 3062 3121 3145 3194 3455 3488 3670 3692 3722 3796 3884 3926 4025 4036 4305 4317 4371 4465 4513 4626 5046 5081 5139 5165 5329 5493 5615 5634 5943 5950 5957 5973 6167 6235 6239 6369 6390 6400 6418 6465 6506 6539 6765 6816 6836 6844 6972 6983 6990 7041 7157 7203 7377 7393 7644 7658 7680 7890 8081 8114 8224 8352 8409 8548 8744 8800 8858 9029 9063 9076 9205 9279 9429 9502 10039 10284 10870 10992 11026 11087 11189 11570 11614 12351 12443 12460 12541 12620 12703 12710 12777 12868 13112 13212 13601 13703 14180 14231 14476 14546 14624 14830 14835 14845 14888 14951 15027 15056 15140 15525 15626 15644 15763 15787 16010 16447 16453 16638 16639 17671 17844 17902 18548 18715 18962 18997 19318 19364 19378 19392 19579 19647 19723 19859 20294 20303 20375 20829 20922 20929 21005 21073 21080 21482 21521 21554 21605 21852 22163 22188 22393 22495 22501 22562 22710 22773 23358 23464 23542 23695 23750 24131 24469 24471 24550 24561 24582 24766 24885 24915 24938 25051 25094 25602 25657 25666 25682 25910 26069 26176 26957 27310 27737 27833 27945 27986 28435 28662 28806 29013 29269 29355 29475 29953 29967 30298 30682 30689 31203 31207 31217 31550 31758 32052 32374 32668 32806 32860 33134 33148 34098 34371 34922 35657 38083 38290 42086 42394 42410 42446 42990 47005 50616 56069 60889 68614 69442 70744 72102 72551 79581 85927 86927 87307 88268 100521 100523 100526 100545 100546 100548 106764 110055 110092 119542 123282 124530 124563 124588 125131 127060 127113 127162 127274 127377 127437 127486 127639 127716 127781 127859 127927 127982 128132 128214 128300 128365 128393 128439 128614 128688 128784 128856 129030 129202 129411 142706 143651 143693 146368 146410 146566 146675 146747 147064 147128 147203 147264 147505 147526 147606 147692 147800 148166 148341 148505 148691 151867 152315 152597 152678 155458 155576 157626 158337 158500 158624 159550 160403 161041 161075 161505 161512 162657 163199 163314 164222 164309 165248 165720 165989 166035 166196 166608 167088 167272 168153 168448 168455 169180 169352 170007 170334 170975 171690 172158 173004 173335 173757 173874 173917 174014 174214 174702 175126 175296 175948 176086 177190 177601 177849 177928 178124 178443 178790 179025 180124 180136 180257 180503 180652 180754 181100 181629 181811 181838 181970 182047 182145 182155 182189 182267 182716 182862 182986 183178 183839 183889 184050 184056 184194 184202 184239 184389 184998 185858 186240 186490 186534 186694 186824 187522 187584 188505 188527 188644 188866 189016 189107 189356 189826 189942 190025 190604 191118 191616 191822 192063 192077 192115 192294 192522 193124 193316 193509 193580 193735 193862 193879 194769 194781 194927 194984 195210 195271 195785 195964 196012 196056 197491 197788 197865 197911 198051 198063 198373 198562 198644 198723 198728 198945 199133 199201 199265 199284 199686 199695 199751 199872 199885 200067 200354 200616 201083 201181 201284 201307 201432 201446 201714 201736 202050 202120 202290 202407 202409 202455 202604 202631 202785 202786 202795 202807 203062 203392 203526 203667 203729 203739 203799 203887 203896 203960 203966 204012 204100 204126 204178 204195 204207 204221 204246 204252 204409 204463 204501 204530 204605 204867 205068 205210 205758 206180 206201 206283 206532 206587 206747 26 70 71 88 194 251 346 395 563 781 845 963 1087 1098 1275 1395 1422 1510 1593 2091 2175 2204 2205 2277 2308 2364 2386 2822 2852 2941 2960 3009 3155 3243 3255 3283 3330 3597 3628 3662 3749 3846 4124 4128 4299 4451 4460 4571 4633 4660 4706 4808 4810 4828 4909 4923 5290 5461 5575 5602 5668 5676 5696 5905 5929 5972 6003 6061 6207 6442 6724 6766 6784 6808 6896 6970 7066 7167 7240 7413 7422 7454 7591 7637 7810 7931 8001 8101 8112 8132 8227 8253 8267 8435 8448 8476 8480 8514 8547 8565 8685 8827 8874 8897 8926 8991 9031 9138 9197 9221 9377 9400 9548 9590 9628 9653 9828 9865 9979 10027 10030 10117 10169 10337 10368 10419 10515 10550 10864 10999 11004 11050 11091 11185 11222 11268 11287 11405 11597 11708 11725 11760 11761 11823 11909 11930 11987 12080 12156 12178 12200 12263 12286 12561 12567 12569 12765 12780 13042 13127 13188 13221 13250 13375 13403 13563 13572 13713 13819 13833 13853 13925 14016 14100 14253 14379 14422 14510 14516 14702 14783 14995 15211 15361 15405 15730 15805 15844 15987 16017 16071 16176 16211 16430 16692 16923 17480 17539 17587 18000 18381 18570 18643 18682 18738 18757 19061 19216 19439 19468 19487 19856 19992 20140 20307 20400 21082 21157 21337 21474 21627 21999 22013 22321 22443 22485 23302 23922 24098 24951 25005 25120 25592 25607 25644 26239 26550 26996 27938 29605 29932 30636 30683 30853 31104 31811 32976 33568 36598 36770 40942 43535 43772 46219 48323 48388 48522 49908 54354 65323 74175 76397 82202 100332 100792 100929 102978 103129 103290 104490 104988 105271 108809 118736 118837 118987 124616 126516 131438 132259 135745 137297 137744 139089 140067 140681 141842 141986 143191 144179 145162 145655 146002 146540 146857 147635 148631 151917 154917 156428 159295 159380 159508 161153 161635 162412 162470 162608 162834 163575 163664 164208 164890 165467 165714 166069 167009 167989 168226 169035 169275 169631 170086 170589 170748 170828 171197 171744 171958 172165 172296 172593 172611 172748 173271 173372 173486 173638 173913 174259 174418 174426 175178 175746 175812 175893 175901 176168 176387 176504 176772 176794 176802 177308 177635 178396 178609 179287 179309 179545 179573 179776 180926 181041 181070 181072 181085 181239 181405 181459 181685 181810 182108 182373 183184 183923 184089 184327 184918 185005 185706 185872 186291 186846 187253 187856 187963 188144 188202 188739 189688 189932 189974 190808 190927 190972 191105 191213 191353 191439 191722 191724 191884 191901 192090 192177 192227 192489 192505 192747 192828 193178 193367 193503 193568 193840 193925 194014 194160 194493 194748 194761 194792 194877 194897 195128 195154 195316 195476 195496 195791 195904 196041 196389 196910 197129 197752 198128 198259 198411 198428 198462 198466 198564 198701 198890 199164 199460 199577 199763 199829 199891 200026 200100 200210 200231 200294 200295 200480 200633 200642 200707 200785 200786 200821 200871 200899 200979 200996 201051 201052 201078 201084 201098 201131 201135 201142 201160 201192 201210 201225 201232 201240 201294 201301 201345 201405 201433 201454 201465 201466 201492 201504 201541 201587 201612 201641 201659 201672 201682 201690 201809 201822 202138 202144 202254 202258 202497 202596 202726 202782 202881 202892 203024 203082 203127 203242 203275 203334 203342 203344 203348 203349 203382 203502 203509 203522 203581 203595 203661 203662 203684 203696 203709 203721 203740 203782 203846 203856 203870 203895 203900 203980 203982 203989 203996 204035 204048 204083 204099 204109 204225 204229 204296 204320 204457 204552 205037 205641 205870 206016 206035 206169 206324 206401 206623 206875 207096 207110 207111
      86 406 676 989 991 1048 1238 1248 1266 1341 1549 1654 1740 1859 1876 2233 2310 2630 2643 2673 2725 2746 2756 2836 2964 3200 3361 3416 3513 3642 3829 4199 4620 5377 5460 5581 5783 6208 6496 6663 6681 7818 7891 7973 7990 8167 8276 9164 9265 9517 9969 10136 10146 10332 10374 10721 10826 11174 11601 12147 12176 12510 12547 13103 13848 14062 14391 14857 15016 15895 16188 17041 17827 18347 19162 19172 20200 20277 20571 20685 22264 22711 22906 23929 24621 25110 25322 25505 25824 26325 26529 27446 27551 28444 32031 32341 33184 33578 36461 36608 37940 39235 42906 50024 57520 73747 76937 97291 100653 100661 100662 100663 100664 100674 100675 100676 100784 100797 100880 100983 101021 101062 101292 102007 102066 103081 103335 104405 107763 108088 109432 109472 115456 118338 128718 138632 140937 141922 145909 156145 157349 157489 157906 159644 159918 160326 161954 162861 163508 164913 164940 165520 167019 167760 168233 168245 170455 170482 171137 171323 172434 174055 175075 175355 176684 176997 177633 179271 179286 179364 180185 180359 180631 180890 181216 181258 181292 181401 181584 182704 183475 183800 184080 184087 184204 184621 185030 185271 185497 185610 185827 186419 186631 186680 186825 186876 187813 187885 188252 188541 188760 189438 189812 189893 191637 191945 193019 193317 193373 193492 194070 194663 194987 195121 195342 195538 195693 195792 196982 197053 197081 197308 197509 197772 197995 198057 198149 198202 198313 198340 198750 198819 199208 199338 199886 200398 200518 200985 201318 201585 202054 202213 202546 202811 202828 203554 203814 203914 203967 205635 206316 206828 206895 35 213 578 821 843 998 1125 1260 1613 2051 2282 2297 2387 2455 2465 2586 2652 2921 3120 3653 3654 3789 3860 3930 3936 4145 5147 5253 5784 6012 6201 6386 6509 6530 6950 7260 7670 7712 8498 9173 9175 9323 9351 9644 9705 10432 10534 10748 11248 11820 12797 13066 13186 13207 13387 13570 14728 14825 14855 15017 15083 15557 15775 16489 16559 16828 16977 18068 18713 18780 19488 19789 19982 20250 20693 20891 20970 21752 22243 22487 22566 22779 23093 23100 23270 24062 24154 24602 24737 24786 25317 25655 27035 27787 27863 28226 28623 28700 28834 28879 29410 30398 31398 32371 32715 34394 35039 35756 36797 41056 48572 48662 49679 62478 69987 95305 101342 104197 116955 118674 118727 118839 120894 122588 124317 124436 125679 125805 126884 133873 134035 141663 143442 145004 145901 147448 152758 156424 157722 160822 162263 162437 162525 164269 165910 166949 168253 168256 168827 171307 171694 172721 173569 173600 174227 174440 174926 175975 176210 176449 176461 176627 176981 177283 177466 177782 178123 178358 178544 178943 178961 179276 179767 180412 181832 181902 183325 183515 183815 184482 185002 186139 186488 187276 187479 188788 189031 189668 189813 189984 190419 190676 190770 190866 191288 191378 191707 192215 192372 192422 192692 193528 193882 193957 194406 194445 194708 194787 195224 195335 195656 195907 195937 196055 196071 196682 196917 197051 197271 197282 198052 198501 198527 199360 199617 199809 199951 200353 201620 201987 202375 202595 202652 202815 202915 203018 203189 203305 203312 203531 203775 204019 204024 204054 204464 205235 206003 206199 206204 206516 206659 
      '
      subdomain_ids = '


      '
    []
    [./split]
      type = BreakMeshByBlockGenerator
      input = subdomain_id
      split_interface = true
      block_pairs = '100 200; 300 400'
    []
    [./sidesets]
      input = split
      type = SideSetsFromNormalsGenerator
      normals = '-1 0 0
                  1 0 0
                  0 -1 0
                  0 1 0'
      new_boundary = 'left right bottom top'
    []  
  []

  [GlobalParams]
    #primary variables
    displacements = 'disp_x disp_y'
    #damping ratio
    q = 0.1
    #characteristic length (m)
    Dc = 0.4
    #initial normal stress (Pa)
    T2_o = 120e6
    #dynamic friction coefficient
    mu_d = 0.525
    #element edge length (m)
    len = 100
  []

  [AuxVariables]
    [./resid_x]
      order = FIRST
      family = LAGRANGE
    [../]
    [./resid_y]
        order = FIRST
        family = LAGRANGE
    []
    [./resid_slipweakening_x]
        order = FIRST
        family = LAGRANGE
    [../]
    [./resid_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    [../]
    [./disp_slipweakening_x]
        order = FIRST
        family = LAGRANGE
    []
    [./disp_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    []
    [./vel_slipweakening_x]
      order = FIRST
      family = LAGRANGE
    []
    [./vel_slipweakening_y]
        order = FIRST
        family = LAGRANGE
    []
    [./mu_s]
        order = CONSTANT
        family = MONOMIAL
    []
    [./ini_shear_stress]
        order = CONSTANT
        family = MONOMIAL
    []
    [./shear_jump_rate_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./shear_jump_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./normal_jump_aux]
      order = CONSTANT
      family = MONOMIAL
  []
    [./shear_traction_aux]
        order = CONSTANT
        family = MONOMIAL
    []
    [./normal_traction_aux]
      order = CONSTANT
      family = MONOMIAL
    []
  []

  [Physics/SolidMechanics/CohesiveZone]
    [./czm_ik]
      boundary = 'Block100_Block200 Block300_Block400'
      strain = SMALL
      generate_output='traction_x traction_y jump_x jump_y'
    [../]
  []

  [Physics]
    [SolidMechanics]
      [QuasiStatic]
        [all]
          strain = SMALL
          add_variables = true
          planar_formulation = PLANE_STRAIN
          generate_output = 'stress_xx stress_yy stress_xy'
          extra_vector_tags = 'restore_tag'
        []
      []
    []
  []

  [Problem]
    extra_tag_vectors = 'restore_tag'
  []

  [Functions]
    [func_static_friction_coeff_mus]
      type = ConstantFunction
      value = 0.677
    []
    #the center is (-8000,0)
    #expand 1.5e3 on both side (-9500,0) and (-6500,0)
    [func_initial_strike_shear_stress]
      type = PiecewiseConstant
      axis=x
      x = '-1000e3 -9.5e3  -6.5e3'
      y = ' 70.0e6 81.6e6 70.0e6'
    []
  []

  [AuxKernels]
    [Displacment_x]
      type = ProjectionAux
      variable = disp_slipweakening_x
      v = disp_x
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Displacement_y]
      type = ProjectionAux
      variable = disp_slipweakening_y
      v = disp_y
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Vel_x]
      type = CompVarRate
      variable = vel_slipweakening_x
      coupled = disp_x
      execute_on = 'TIMESTEP_END'
    []
    [Vel_y]
      type = CompVarRate
      variable = vel_slipweakening_y
      coupled = disp_y
      execute_on = 'TIMESTEP_END'
    []
    [jump_x_rate]
      type = FDCompVarRate
      variable = shear_jump_rate_aux
      coupled = jump_x
      execute_on = 'TIMESTEP_END'
    []
    [Residual_x]
      type = ProjectionAux
      variable = resid_slipweakening_x
      v = resid_x
      execute_on = 'TIMESTEP_BEGIN'
    []
    [Residual_y]
      type = ProjectionAux
      variable = resid_slipweakening_y
      v = resid_y
      execute_on = 'TIMESTEP_BEGIN'
    []
    [restore_x]
      type = TagVectorAux
      vector_tag = 'restore_tag'
      v = 'disp_x'
      variable = 'resid_x'
      execute_on = 'TIMESTEP_END'
    []
    [restore_y]
      type = TagVectorAux
      vector_tag = 'restore_tag'
      v = 'disp_y'
      variable = 'resid_y'
      execute_on = 'TIMESTEP_END'
    []
    [StaticFricCoeff]
      type = FunctionAux
      variable = mu_s
      function = func_static_friction_coeff_mus
      execute_on = 'LINEAR TIMESTEP_BEGIN'
    []
    [StrikeShearStress]
      type = FunctionAux
      variable = ini_shear_stress
      function = func_initial_strike_shear_stress
      execute_on = 'LINEAR TIMESTEP_BEGIN'
    []
    ##
    [GetJumpX]
      type = MaterialRealAux
      property = jump_x
      variable = shear_jump_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
    [GetJumpY]
      type = MaterialRealAux
      property = jump_y
      variable = normal_jump_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
    [GetTractionX]
      type = MaterialRealAux
      property = traction_x
      variable = shear_traction_aux
      boundary = 'Block100_Block200 Block300_Block400'
    []
  []

  [Kernels]
    [./inertia_x]
      type = InertialForce
      use_displaced_mesh = false
      variable = disp_x
    []
    [./inertia_y]
      type = InertialForce
      use_displaced_mesh = false
      variable = disp_y
    []
    [./Reactionx]
      type = StiffPropDamping
      variable = 'disp_x'
      component = '0'
    []
    [./Reactiony]
      type = StiffPropDamping
      variable = 'disp_y'
      component = '1'
    []
  []

  [Materials]
    [elasticity]
        type = ComputeIsotropicElasticityTensor
        lambda = 32.04e9
        shear_modulus = 32.04e9
        use_displaced_mesh = false
    []
    [stress]
        type = ComputeLinearElasticStress
    []
    [density]
        type = GenericConstantMaterial
        prop_names = density
        prop_values = 2670
    []
    [./czm_mat]
        type = SlipWeakeningFrictionczm2d
        disp_slipweakening_x     = disp_slipweakening_x
        disp_slipweakening_y     = disp_slipweakening_y
        reaction_slipweakening_x = resid_slipweakening_x
        reaction_slipweakening_y = resid_slipweakening_y
        mu_s = mu_s
        ini_shear_sts = ini_shear_stress
        boundary = 'Block100_Block200 Block300_Block400'
    [../]
    ##
    [./shear_jump_mat]
      type = ParsedMaterial
      property_name = shear_jump_mat
      coupled_variables = 'shear_jump_aux'
      expression = 'shear_jump_aux'
      outputs = exodus
    []
    [./normal_jump_mat]
      type = ParsedMaterial
      property_name = normal_jump_mat
      coupled_variables = 'normal_jump_aux'
      expression = 'normal_jump_aux'
      outputs = exodus
    []
    [./shear_traction_mat]
      type = ParsedMaterial
      property_name = shear_traction_mat
      coupled_variables = 'shear_traction_aux'
      expression = 'shear_traction_aux'
      outputs = exodus
    []
    [./shear_jump_rate_mat]
      type = ParsedMaterial
      property_name = shear_jump_rate_mat
      coupled_variables = 'shear_jump_rate_aux'
      expression = 'shear_jump_rate_aux'
      outputs = exodus
    []
  []

  [UserObjects]
    [recompute_residual_tag]
        type = ResidualEvaluationUserObject
        vector_tag = 'restore_tag'
        force_preaux = true
        execute_on = 'TIMESTEP_END'
    []
  []

  [Executioner]
    type = Transient
    dt = 0.0025
    end_time = 12
    # num_steps = 10
    [TimeIntegrator]
      type = CentralDifference
      solve_type = lumped
    []
  []

  [Outputs]
    exodus = true
    time_step_interval = 10
    # [csv]
    #   type = CSV
    #   execute_on = 'initial timestep_end'
    #   time_step_interval = 1
    # []
  []

  [BCs]
    [./dashpot_top_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = top
    []
    [./dashpot_top_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = top
    []
    [./dashpot_bottom_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = bottom
    []
    [./dashpot_bottom_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = bottom
    []
    [./dashpot_left_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = left
    []
    [./dashpot_left_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = left
    []
    [./dashpot_right_x]
        type = NonReflectDashpotBC
        component = 0
        variable = disp_x
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = right
    []
    [./dashpot_right_y]
        type = NonReflectDashpotBC
        component = 1
        variable = disp_y
        disp_x = disp_x
        disp_y = disp_y
        p_wave_speed = 6000
        shear_wave_speed = 3464
        boundary = right
    []
  []

